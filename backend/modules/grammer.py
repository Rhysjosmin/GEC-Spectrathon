import spacy

txt = "Fractals are complex geometric shapes that exhibit self-similarity at different scales. This means that as you zoom into a fractal, you'll see smaller copies of the overall shape, repeating infinitely. Fractals are not limited to simple shapes like squares or circles; they can have intricate and infinitely detailed patterns.One of the most famous fractals is the Mandelbrot set, discovered by mathematician Benoit Mandelbrot in the 1970s. The Mandelbrot set is generated by iterating a simple mathematical formula and determining whether the resulting sequence remains bounded or tends to infinity. Points within the Mandelbrot set are colored black, while points outside the set are colored based on how quickly they diverge to infinity."

# Alternately a txt file
# path = //content/sample_data
nlp = spacy.load('en_core_web_sm')


parse = nlp(txt)

sentences = list(parse.sents)
sents = []
for sent in sentences:
  sents.append(sent)

print(sents)

topics = ['Physics','Chemistry','Biology','Mathematics','Computer Science','Medicine','Art History','Computer Science & Information Technology','Law']

# from sklearn.metrics.pairwise import cosine_similarity
def calc_similarity(sentence_doc, topic_doc):
  return sentence_doc.cosine_similarity(topic_doc)


topics_doc = [nlp(topic) for topic in topics]

def rank_sents(sents,topics):
  ranked_sents = []
  for sent in sents:
    scores = [calc_similarity(sent, topic_doc) for topic_doc in topics]
    avg_score = avg(similarity_scores)
    ranked_sents.append((sent.text, avg_score))
    ranked_sents.sort(key=lambda x: x[1], reverse=True)
    return ranked_sents

ranks = rank_sents(sents,topics)
print(ranks)